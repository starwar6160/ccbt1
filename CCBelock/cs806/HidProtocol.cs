/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace jclms {

public class HidProtocol {
  public static int Open(int lTimeOut) {
    int ret = HidProtocolPINVOKE.Open(lTimeOut);
    return ret;
  }

  public static int Close() {
    int ret = HidProtocolPINVOKE.Close();
    return ret;
  }

  public static int Notify(string pszMsg) {
    int ret = HidProtocolPINVOKE.Notify(pszMsg);
    return ret;
  }

  public static int SetRecvMsgRotine(SWIGTYPE_p_f_p_q_const__char__void pRecvMsgFun) {
    int ret = HidProtocolPINVOKE.SetRecvMsgRotine(SWIGTYPE_p_f_p_q_const__char__void.getCPtr(pRecvMsgFun));
    return ret;
  }

  public static void zwPushString(string str) {
    HidProtocolPINVOKE.zwPushString(str);
  }

  public static void myLuaBridgeSendJsonAPI(string luaScriptFile) {
    HidProtocolPINVOKE.myLuaBridgeSendJsonAPI(luaScriptFile);
  }

  public static void SetReturnDrives(SWIGTYPE_p_f_p_char_p_q_const__char__void _DrivesListFun) {
    HidProtocolPINVOKE.SetReturnDrives(SWIGTYPE_p_f_p_char_p_q_const__char__void.getCPtr(_DrivesListFun));
  }

  public static int ListDrives(string DrivesType) {
    int ret = HidProtocolPINVOKE.ListDrives(DrivesType);
    return ret;
  }

  public static int OpenDrives(string DrivesType, string DrivesID) {
    int ret = HidProtocolPINVOKE.OpenDrives(DrivesType, DrivesID);
    return ret;
  }

  public static int CloseDrives(string DrivesType, string DrivesID) {
    int ret = HidProtocolPINVOKE.CloseDrives(DrivesType, DrivesID);
    return ret;
  }

  public static int OpenJson(int lTimeOut) {
    int ret = HidProtocolPINVOKE.OpenJson(lTimeOut);
    return ret;
  }

  public static int SendToLockJson(string pszJson) {
    int ret = HidProtocolPINVOKE.SendToLockJson(pszJson);
    return ret;
  }

  public static string RecvFromLockJson(int timeoutMs) {
    string ret = HidProtocolPINVOKE.RecvFromLockJson(timeoutMs);
    return ret;
  }

  public static int CloseJson() {
    int ret = HidProtocolPINVOKE.CloseJson();
    return ret;
  }

  public static void jcMulHidEnum(int hidPid, SWIGTYPE_p_std__string jcDevListJson) {
    HidProtocolPINVOKE.jcMulHidEnum(hidPid, SWIGTYPE_p_std__string.getCPtr(jcDevListJson));
    if (HidProtocolPINVOKE.SWIGPendingException.Pending) throw HidProtocolPINVOKE.SWIGPendingException.Retrieve();
  }

  public static SWIGTYPE_p_f_p_char_p_q_const__char__void G_JCHID_ENUM_DEV2015A {
    set {
      HidProtocolPINVOKE.G_JCHID_ENUM_DEV2015A_set(SWIGTYPE_p_f_p_char_p_q_const__char__void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = HidProtocolPINVOKE.G_JCHID_ENUM_DEV2015A_get();
      SWIGTYPE_p_f_p_char_p_q_const__char__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_char_p_q_const__char__void(cPtr, false);
      return ret;
    } 
  }

}

}
