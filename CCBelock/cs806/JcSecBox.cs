/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace jclms {

public class JcSecBox : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal JcSecBox(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(JcSecBox obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~JcSecBox() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HidProtocolPINVOKE.delete_JcSecBox(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public JcSecBox() : this(HidProtocolPINVOKE.new_JcSecBox(), true) {
  }

  public void jcClose() {
    HidProtocolPINVOKE.JcSecBox_jcClose(swigCPtr);
  }

  public JC_SECBOX_STATUS SecboxAuth() {
    JC_SECBOX_STATUS ret = (JC_SECBOX_STATUS)HidProtocolPINVOKE.JcSecBox_SecboxAuth(swigCPtr);
    return ret;
  }

  public void SecboxWriteData(int index, string dataB64) {
    HidProtocolPINVOKE.JcSecBox_SecboxWriteData(swigCPtr, index, dataB64);
  }

  public string SecboxReadData(int index) {
    string ret = HidProtocolPINVOKE.JcSecBox_SecboxReadData(swigCPtr, index);
    return ret;
  }

}

}
